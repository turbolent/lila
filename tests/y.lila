// Y combinator

defn Y (f) {
  ((fn (x) { x(x) })
   (fn (y) {
      f(fn (... rest) {
          apply(y(y), rest)
        })
    }))
};

// fib using Y

def fibY = Y(fn (f) {
  fn (n) {
    if <(n, 2) {
      n
    } else {
      +(f(-(n, 1)),
        f(-(n, 2)))
    }
  }
});

fibY(23);

// loop using Y

Y(fn (f) {
    fn (x) {
      print(as-string(x));
      if (<(x, 10)) {
        f(+(x, 1))
      }
    }
  })(1);
